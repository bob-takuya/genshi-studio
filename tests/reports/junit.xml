<testsuites id="" name="" tests="816" failures="0" skipped="816" errors="0" time="0.077135">
<testsuite name="homepage.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Homepage › should display the homepage with correct title" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should navigate to Studio page" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should toggle theme" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/01-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Application Loading and Initialization › should load studio page successfully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load within performance targets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle progressive enhancement" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should maintain state on page reload" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle network failures gracefully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load all static assets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should have proper meta tags and SEO" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should initialize service worker for PWA" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/02-drawing-tools.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Drawing Tools and Graphics › should select and activate drawing tools" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw with pen tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw smooth curves with brush tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should change colors" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should erase drawings" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should undo and redo actions" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should clear canvas" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should handle brush size changes" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should maintain 60fps while drawing" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should export canvas as image" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should save artwork" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/03-cultural-patterns.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Cultural Pattern Generation › should display pattern library" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should apply geometric patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should customize pattern symmetry" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should rotate patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should scale patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should combine patterns with drawing" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should animate pattern generation" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should layer multiple patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should export patterns as vector graphics" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should render patterns at high resolution" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/04-performance.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Performance Testing › should maintain 60fps during canvas operations" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should keep memory usage under 512MB" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should load application in under 3 seconds" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize bundle size" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should handle rapid user interactions" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize canvas rendering" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should efficiently handle large datasets" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/05-accessibility.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Accessibility Testing › should have no accessibility violations on home page" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support keyboard navigation" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have proper focus indicators" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support screen readers" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have sufficient color contrast" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support high contrast mode" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should handle zoom levels" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should provide text alternatives" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support reduced motion" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have accessible forms in studio" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should announce status updates" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/06-visual-regression.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match home page visual snapshot" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match hero section visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match dark theme visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match empty canvas visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match tool panel visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match drawing visual consistency" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern rendering" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern customization visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match mobile layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match tablet layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match desktop layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match button states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match form input states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Cross-Browser Visual Consistency › should render consistently across browsers" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture loading animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture pattern generation animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/07-basic-functionality.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Basic Genshi Studio Tests › should load the studio page" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have all main mode buttons" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should switch to parametric mode and show controls" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have sidebar panels" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should generate patterns in parametric mode" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have export functionality" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should be responsive on mobile" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should handle errors gracefully" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/08-production-features.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Genshi Studio Production Features › should load and display all 9 pattern types" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test keyboard shortcuts functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test preset loading and transitions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test bookmarking system functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test export and screenshot capabilities" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test auto-evolve mode functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test parameter controls and sliders" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test mobile touch interactions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test error handling and recovery" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test page load performance" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/09-production-diagnostic.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Production Deployment Diagnostic › should analyze page structure and content" classname="specs/09-production-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/10-growth-studio.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Interactive Growth Studio › should display Growth button in toolbar" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch to Growth mode when clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show controls overlay" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show settings panel when settings clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should interact with canvas on click" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should reset growth when reset clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should pause/play animation" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should export image" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch between pattern types" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should apply color palettes" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/11-studio-page-debug.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Studio Page Debug › should load Studio page" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Studio Page Debug › should have navigation to Studio" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/12-growth-button-check.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Growth Button Check › should show Growth button on Studio page" classname="specs/12-growth-button-check.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/13-console-errors.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Console Error Check › should check for console errors on Studio page" classname="specs/13-console-errors.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug App Loading › check app loading issues" classname="specs/debug-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-console.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Console Errors › check for console errors and app loading" classname="specs/debug-console.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-screenshot.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="chromium" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Screenshot › capture page screenshot and analyze" classname="specs/debug-screenshot.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Homepage › should display the homepage with correct title" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should navigate to Studio page" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should toggle theme" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/01-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Application Loading and Initialization › should load studio page successfully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load within performance targets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle progressive enhancement" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should maintain state on page reload" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle network failures gracefully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load all static assets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should have proper meta tags and SEO" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should initialize service worker for PWA" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/02-drawing-tools.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Drawing Tools and Graphics › should select and activate drawing tools" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw with pen tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw smooth curves with brush tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should change colors" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should erase drawings" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should undo and redo actions" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should clear canvas" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should handle brush size changes" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should maintain 60fps while drawing" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should export canvas as image" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should save artwork" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/03-cultural-patterns.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Cultural Pattern Generation › should display pattern library" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should apply geometric patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should customize pattern symmetry" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should rotate patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should scale patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should combine patterns with drawing" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should animate pattern generation" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should layer multiple patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should export patterns as vector graphics" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should render patterns at high resolution" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/04-performance.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Performance Testing › should maintain 60fps during canvas operations" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should keep memory usage under 512MB" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should load application in under 3 seconds" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize bundle size" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should handle rapid user interactions" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize canvas rendering" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should efficiently handle large datasets" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/05-accessibility.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Accessibility Testing › should have no accessibility violations on home page" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support keyboard navigation" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have proper focus indicators" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support screen readers" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have sufficient color contrast" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support high contrast mode" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should handle zoom levels" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should provide text alternatives" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support reduced motion" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have accessible forms in studio" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should announce status updates" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/06-visual-regression.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match home page visual snapshot" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match hero section visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match dark theme visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match empty canvas visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match tool panel visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match drawing visual consistency" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern rendering" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern customization visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match mobile layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match tablet layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match desktop layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match button states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match form input states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Cross-Browser Visual Consistency › should render consistently across browsers" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture loading animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture pattern generation animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/07-basic-functionality.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Basic Genshi Studio Tests › should load the studio page" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have all main mode buttons" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should switch to parametric mode and show controls" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have sidebar panels" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should generate patterns in parametric mode" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have export functionality" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should be responsive on mobile" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should handle errors gracefully" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/08-production-features.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Genshi Studio Production Features › should load and display all 9 pattern types" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test keyboard shortcuts functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test preset loading and transitions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test bookmarking system functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test export and screenshot capabilities" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test auto-evolve mode functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test parameter controls and sliders" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test mobile touch interactions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test error handling and recovery" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test page load performance" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/09-production-diagnostic.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Production Deployment Diagnostic › should analyze page structure and content" classname="specs/09-production-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/10-growth-studio.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Interactive Growth Studio › should display Growth button in toolbar" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch to Growth mode when clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show controls overlay" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show settings panel when settings clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should interact with canvas on click" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should reset growth when reset clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should pause/play animation" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should export image" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch between pattern types" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should apply color palettes" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/11-studio-page-debug.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Studio Page Debug › should load Studio page" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Studio Page Debug › should have navigation to Studio" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/12-growth-button-check.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Growth Button Check › should show Growth button on Studio page" classname="specs/12-growth-button-check.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/13-console-errors.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Console Error Check › should check for console errors on Studio page" classname="specs/13-console-errors.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug App Loading › check app loading issues" classname="specs/debug-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-console.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Console Errors › check for console errors and app loading" classname="specs/debug-console.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-screenshot.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Screenshot › capture page screenshot and analyze" classname="specs/debug-screenshot.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Homepage › should display the homepage with correct title" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should navigate to Studio page" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should toggle theme" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/01-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Application Loading and Initialization › should load studio page successfully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load within performance targets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle progressive enhancement" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should maintain state on page reload" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle network failures gracefully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load all static assets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should have proper meta tags and SEO" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should initialize service worker for PWA" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/02-drawing-tools.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Drawing Tools and Graphics › should select and activate drawing tools" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw with pen tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw smooth curves with brush tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should change colors" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should erase drawings" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should undo and redo actions" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should clear canvas" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should handle brush size changes" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should maintain 60fps while drawing" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should export canvas as image" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should save artwork" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/03-cultural-patterns.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Cultural Pattern Generation › should display pattern library" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should apply geometric patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should customize pattern symmetry" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should rotate patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should scale patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should combine patterns with drawing" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should animate pattern generation" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should layer multiple patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should export patterns as vector graphics" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should render patterns at high resolution" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/04-performance.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Performance Testing › should maintain 60fps during canvas operations" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should keep memory usage under 512MB" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should load application in under 3 seconds" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize bundle size" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should handle rapid user interactions" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize canvas rendering" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should efficiently handle large datasets" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/05-accessibility.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Accessibility Testing › should have no accessibility violations on home page" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support keyboard navigation" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have proper focus indicators" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support screen readers" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have sufficient color contrast" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support high contrast mode" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should handle zoom levels" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should provide text alternatives" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support reduced motion" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have accessible forms in studio" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should announce status updates" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/06-visual-regression.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match home page visual snapshot" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match hero section visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match dark theme visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match empty canvas visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match tool panel visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match drawing visual consistency" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern rendering" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern customization visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match mobile layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match tablet layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match desktop layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match button states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match form input states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Cross-Browser Visual Consistency › should render consistently across browsers" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture loading animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture pattern generation animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/07-basic-functionality.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Basic Genshi Studio Tests › should load the studio page" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have all main mode buttons" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should switch to parametric mode and show controls" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have sidebar panels" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should generate patterns in parametric mode" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have export functionality" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should be responsive on mobile" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should handle errors gracefully" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/08-production-features.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Genshi Studio Production Features › should load and display all 9 pattern types" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test keyboard shortcuts functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test preset loading and transitions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test bookmarking system functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test export and screenshot capabilities" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test auto-evolve mode functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test parameter controls and sliders" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test mobile touch interactions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test error handling and recovery" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test page load performance" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/09-production-diagnostic.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Production Deployment Diagnostic › should analyze page structure and content" classname="specs/09-production-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/10-growth-studio.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Interactive Growth Studio › should display Growth button in toolbar" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch to Growth mode when clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show controls overlay" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show settings panel when settings clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should interact with canvas on click" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should reset growth when reset clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should pause/play animation" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should export image" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch between pattern types" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should apply color palettes" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/11-studio-page-debug.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Studio Page Debug › should load Studio page" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Studio Page Debug › should have navigation to Studio" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/12-growth-button-check.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Growth Button Check › should show Growth button on Studio page" classname="specs/12-growth-button-check.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/13-console-errors.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Console Error Check › should check for console errors on Studio page" classname="specs/13-console-errors.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug App Loading › check app loading issues" classname="specs/debug-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-console.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Console Errors › check for console errors and app loading" classname="specs/debug-console.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-screenshot.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Screenshot › capture page screenshot and analyze" classname="specs/debug-screenshot.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Homepage › should display the homepage with correct title" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should navigate to Studio page" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should toggle theme" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/01-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Application Loading and Initialization › should load studio page successfully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load within performance targets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle progressive enhancement" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should maintain state on page reload" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle network failures gracefully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load all static assets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should have proper meta tags and SEO" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should initialize service worker for PWA" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/02-drawing-tools.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Drawing Tools and Graphics › should select and activate drawing tools" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw with pen tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw smooth curves with brush tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should change colors" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should erase drawings" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should undo and redo actions" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should clear canvas" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should handle brush size changes" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should maintain 60fps while drawing" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should export canvas as image" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should save artwork" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/03-cultural-patterns.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Cultural Pattern Generation › should display pattern library" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should apply geometric patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should customize pattern symmetry" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should rotate patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should scale patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should combine patterns with drawing" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should animate pattern generation" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should layer multiple patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should export patterns as vector graphics" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should render patterns at high resolution" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/04-performance.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Performance Testing › should maintain 60fps during canvas operations" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should keep memory usage under 512MB" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should load application in under 3 seconds" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize bundle size" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should handle rapid user interactions" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize canvas rendering" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should efficiently handle large datasets" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/05-accessibility.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Accessibility Testing › should have no accessibility violations on home page" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support keyboard navigation" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have proper focus indicators" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support screen readers" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have sufficient color contrast" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support high contrast mode" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should handle zoom levels" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should provide text alternatives" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support reduced motion" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have accessible forms in studio" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should announce status updates" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/06-visual-regression.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match home page visual snapshot" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match hero section visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match dark theme visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match empty canvas visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match tool panel visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match drawing visual consistency" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern rendering" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern customization visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match mobile layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match tablet layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match desktop layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match button states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match form input states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Cross-Browser Visual Consistency › should render consistently across browsers" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture loading animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture pattern generation animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/07-basic-functionality.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Basic Genshi Studio Tests › should load the studio page" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have all main mode buttons" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should switch to parametric mode and show controls" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have sidebar panels" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should generate patterns in parametric mode" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have export functionality" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should be responsive on mobile" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should handle errors gracefully" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/08-production-features.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Genshi Studio Production Features › should load and display all 9 pattern types" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test keyboard shortcuts functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test preset loading and transitions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test bookmarking system functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test export and screenshot capabilities" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test auto-evolve mode functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test parameter controls and sliders" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test mobile touch interactions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test error handling and recovery" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test page load performance" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/09-production-diagnostic.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Production Deployment Diagnostic › should analyze page structure and content" classname="specs/09-production-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/10-growth-studio.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Interactive Growth Studio › should display Growth button in toolbar" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch to Growth mode when clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show controls overlay" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show settings panel when settings clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should interact with canvas on click" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should reset growth when reset clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should pause/play animation" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should export image" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch between pattern types" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should apply color palettes" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/11-studio-page-debug.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Studio Page Debug › should load Studio page" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Studio Page Debug › should have navigation to Studio" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/12-growth-button-check.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Growth Button Check › should show Growth button on Studio page" classname="specs/12-growth-button-check.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/13-console-errors.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Console Error Check › should check for console errors on Studio page" classname="specs/13-console-errors.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug App Loading › check app loading issues" classname="specs/debug-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-console.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Console Errors › check for console errors and app loading" classname="specs/debug-console.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-screenshot.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-chrome" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Screenshot › capture page screenshot and analyze" classname="specs/debug-screenshot.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Homepage › should display the homepage with correct title" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should navigate to Studio page" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should toggle theme" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/01-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Application Loading and Initialization › should load studio page successfully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load within performance targets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle progressive enhancement" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should maintain state on page reload" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle network failures gracefully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load all static assets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should have proper meta tags and SEO" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should initialize service worker for PWA" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/02-drawing-tools.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Drawing Tools and Graphics › should select and activate drawing tools" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw with pen tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw smooth curves with brush tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should change colors" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should erase drawings" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should undo and redo actions" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should clear canvas" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should handle brush size changes" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should maintain 60fps while drawing" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should export canvas as image" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should save artwork" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/03-cultural-patterns.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Cultural Pattern Generation › should display pattern library" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should apply geometric patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should customize pattern symmetry" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should rotate patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should scale patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should combine patterns with drawing" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should animate pattern generation" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should layer multiple patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should export patterns as vector graphics" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should render patterns at high resolution" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/04-performance.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Performance Testing › should maintain 60fps during canvas operations" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should keep memory usage under 512MB" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should load application in under 3 seconds" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize bundle size" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should handle rapid user interactions" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize canvas rendering" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should efficiently handle large datasets" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/05-accessibility.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Accessibility Testing › should have no accessibility violations on home page" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support keyboard navigation" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have proper focus indicators" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support screen readers" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have sufficient color contrast" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support high contrast mode" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should handle zoom levels" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should provide text alternatives" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support reduced motion" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have accessible forms in studio" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should announce status updates" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/06-visual-regression.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match home page visual snapshot" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match hero section visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match dark theme visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match empty canvas visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match tool panel visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match drawing visual consistency" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern rendering" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern customization visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match mobile layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match tablet layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match desktop layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match button states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match form input states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Cross-Browser Visual Consistency › should render consistently across browsers" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture loading animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture pattern generation animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/07-basic-functionality.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Basic Genshi Studio Tests › should load the studio page" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have all main mode buttons" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should switch to parametric mode and show controls" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have sidebar panels" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should generate patterns in parametric mode" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have export functionality" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should be responsive on mobile" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should handle errors gracefully" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/08-production-features.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Genshi Studio Production Features › should load and display all 9 pattern types" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test keyboard shortcuts functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test preset loading and transitions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test bookmarking system functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test export and screenshot capabilities" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test auto-evolve mode functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test parameter controls and sliders" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test mobile touch interactions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test error handling and recovery" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test page load performance" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/09-production-diagnostic.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Production Deployment Diagnostic › should analyze page structure and content" classname="specs/09-production-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/10-growth-studio.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Interactive Growth Studio › should display Growth button in toolbar" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch to Growth mode when clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show controls overlay" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show settings panel when settings clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should interact with canvas on click" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should reset growth when reset clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should pause/play animation" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should export image" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch between pattern types" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should apply color palettes" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/11-studio-page-debug.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Studio Page Debug › should load Studio page" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Studio Page Debug › should have navigation to Studio" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/12-growth-button-check.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Growth Button Check › should show Growth button on Studio page" classname="specs/12-growth-button-check.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/13-console-errors.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Console Error Check › should check for console errors on Studio page" classname="specs/13-console-errors.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug App Loading › check app loading issues" classname="specs/debug-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-console.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Console Errors › check for console errors and app loading" classname="specs/debug-console.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-screenshot.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="mobile-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Screenshot › capture page screenshot and analyze" classname="specs/debug-screenshot.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Homepage › should display the homepage with correct title" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should navigate to Studio page" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should toggle theme" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/01-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Application Loading and Initialization › should load studio page successfully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load within performance targets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle progressive enhancement" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should maintain state on page reload" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle network failures gracefully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load all static assets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should have proper meta tags and SEO" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should initialize service worker for PWA" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/02-drawing-tools.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Drawing Tools and Graphics › should select and activate drawing tools" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw with pen tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw smooth curves with brush tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should change colors" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should erase drawings" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should undo and redo actions" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should clear canvas" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should handle brush size changes" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should maintain 60fps while drawing" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should export canvas as image" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should save artwork" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/03-cultural-patterns.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Cultural Pattern Generation › should display pattern library" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should apply geometric patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should customize pattern symmetry" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should rotate patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should scale patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should combine patterns with drawing" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should animate pattern generation" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should layer multiple patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should export patterns as vector graphics" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should render patterns at high resolution" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/04-performance.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Performance Testing › should maintain 60fps during canvas operations" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should keep memory usage under 512MB" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should load application in under 3 seconds" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize bundle size" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should handle rapid user interactions" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize canvas rendering" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should efficiently handle large datasets" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/05-accessibility.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Accessibility Testing › should have no accessibility violations on home page" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support keyboard navigation" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have proper focus indicators" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support screen readers" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have sufficient color contrast" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support high contrast mode" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should handle zoom levels" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should provide text alternatives" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support reduced motion" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have accessible forms in studio" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should announce status updates" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/06-visual-regression.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match home page visual snapshot" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match hero section visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match dark theme visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match empty canvas visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match tool panel visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match drawing visual consistency" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern rendering" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern customization visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match mobile layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match tablet layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match desktop layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match button states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match form input states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Cross-Browser Visual Consistency › should render consistently across browsers" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture loading animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture pattern generation animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/07-basic-functionality.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Basic Genshi Studio Tests › should load the studio page" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have all main mode buttons" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should switch to parametric mode and show controls" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have sidebar panels" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should generate patterns in parametric mode" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have export functionality" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should be responsive on mobile" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should handle errors gracefully" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/08-production-features.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Genshi Studio Production Features › should load and display all 9 pattern types" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test keyboard shortcuts functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test preset loading and transitions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test bookmarking system functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test export and screenshot capabilities" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test auto-evolve mode functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test parameter controls and sliders" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test mobile touch interactions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test error handling and recovery" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test page load performance" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/09-production-diagnostic.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Production Deployment Diagnostic › should analyze page structure and content" classname="specs/09-production-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/10-growth-studio.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Interactive Growth Studio › should display Growth button in toolbar" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch to Growth mode when clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show controls overlay" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show settings panel when settings clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should interact with canvas on click" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should reset growth when reset clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should pause/play animation" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should export image" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch between pattern types" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should apply color palettes" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/11-studio-page-debug.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Studio Page Debug › should load Studio page" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Studio Page Debug › should have navigation to Studio" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/12-growth-button-check.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Growth Button Check › should show Growth button on Studio page" classname="specs/12-growth-button-check.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/13-console-errors.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Console Error Check › should check for console errors on Studio page" classname="specs/13-console-errors.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug App Loading › check app loading issues" classname="specs/debug-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-console.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Console Errors › check for console errors and app loading" classname="specs/debug-console.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-screenshot.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="tablet-safari" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Screenshot › capture page screenshot and analyze" classname="specs/debug-screenshot.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Homepage › should display the homepage with correct title" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should navigate to Studio page" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should toggle theme" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/01-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Application Loading and Initialization › should load studio page successfully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load within performance targets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle progressive enhancement" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should maintain state on page reload" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle network failures gracefully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load all static assets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should have proper meta tags and SEO" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should initialize service worker for PWA" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/02-drawing-tools.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Drawing Tools and Graphics › should select and activate drawing tools" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw with pen tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw smooth curves with brush tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should change colors" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should erase drawings" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should undo and redo actions" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should clear canvas" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should handle brush size changes" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should maintain 60fps while drawing" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should export canvas as image" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should save artwork" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/03-cultural-patterns.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Cultural Pattern Generation › should display pattern library" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should apply geometric patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should customize pattern symmetry" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should rotate patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should scale patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should combine patterns with drawing" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should animate pattern generation" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should layer multiple patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should export patterns as vector graphics" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should render patterns at high resolution" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/04-performance.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Performance Testing › should maintain 60fps during canvas operations" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should keep memory usage under 512MB" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should load application in under 3 seconds" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize bundle size" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should handle rapid user interactions" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize canvas rendering" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should efficiently handle large datasets" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/05-accessibility.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Accessibility Testing › should have no accessibility violations on home page" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support keyboard navigation" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have proper focus indicators" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support screen readers" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have sufficient color contrast" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support high contrast mode" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should handle zoom levels" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should provide text alternatives" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support reduced motion" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have accessible forms in studio" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should announce status updates" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/06-visual-regression.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match home page visual snapshot" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match hero section visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match dark theme visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match empty canvas visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match tool panel visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match drawing visual consistency" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern rendering" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern customization visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match mobile layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match tablet layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match desktop layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match button states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match form input states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Cross-Browser Visual Consistency › should render consistently across browsers" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture loading animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture pattern generation animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/07-basic-functionality.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Basic Genshi Studio Tests › should load the studio page" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have all main mode buttons" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should switch to parametric mode and show controls" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have sidebar panels" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should generate patterns in parametric mode" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have export functionality" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should be responsive on mobile" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should handle errors gracefully" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/08-production-features.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Genshi Studio Production Features › should load and display all 9 pattern types" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test keyboard shortcuts functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test preset loading and transitions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test bookmarking system functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test export and screenshot capabilities" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test auto-evolve mode functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test parameter controls and sliders" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test mobile touch interactions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test error handling and recovery" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test page load performance" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/09-production-diagnostic.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Production Deployment Diagnostic › should analyze page structure and content" classname="specs/09-production-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/10-growth-studio.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Interactive Growth Studio › should display Growth button in toolbar" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch to Growth mode when clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show controls overlay" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show settings panel when settings clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should interact with canvas on click" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should reset growth when reset clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should pause/play animation" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should export image" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch between pattern types" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should apply color palettes" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/11-studio-page-debug.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Studio Page Debug › should load Studio page" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Studio Page Debug › should have navigation to Studio" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/12-growth-button-check.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Growth Button Check › should show Growth button on Studio page" classname="specs/12-growth-button-check.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/13-console-errors.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Console Error Check › should check for console errors on Studio page" classname="specs/13-console-errors.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug App Loading › check app loading issues" classname="specs/debug-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-console.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Console Errors › check for console errors and app loading" classname="specs/debug-console.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-screenshot.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="performance" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Screenshot › capture page screenshot and analyze" classname="specs/debug-screenshot.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="homepage.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="3" failures="0" skipped="3" time="0" errors="0">
<testcase name="Homepage › should display the homepage with correct title" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should navigate to Studio page" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Homepage › should toggle theme" classname="homepage.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/01-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Application Loading and Initialization › should load studio page successfully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load within performance targets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle progressive enhancement" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should maintain state on page reload" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should handle network failures gracefully" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should load all static assets" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should have proper meta tags and SEO" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Application Loading and Initialization › should initialize service worker for PWA" classname="specs/01-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/02-drawing-tools.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Drawing Tools and Graphics › should select and activate drawing tools" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw with pen tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should draw smooth curves with brush tool" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should change colors" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should erase drawings" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should undo and redo actions" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should clear canvas" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should handle brush size changes" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should maintain 60fps while drawing" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should export canvas as image" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Drawing Tools and Graphics › should save artwork" classname="specs/02-drawing-tools.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/03-cultural-patterns.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Cultural Pattern Generation › should display pattern library" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should apply geometric patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should customize pattern symmetry" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should rotate patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should scale patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should combine patterns with drawing" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should animate pattern generation" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should layer multiple patterns" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should export patterns as vector graphics" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cultural Pattern Generation › should render patterns at high resolution" classname="specs/03-cultural-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/04-performance.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Performance Testing › should maintain 60fps during canvas operations" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should keep memory usage under 512MB" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should load application in under 3 seconds" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize bundle size" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should handle rapid user interactions" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should optimize canvas rendering" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Testing › should efficiently handle large datasets" classname="specs/04-performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/05-accessibility.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Accessibility Testing › should have no accessibility violations on home page" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support keyboard navigation" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have proper focus indicators" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support screen readers" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have sufficient color contrast" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support high contrast mode" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should handle zoom levels" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should provide text alternatives" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should support reduced motion" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should have accessible forms in studio" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Testing › should announce status updates" classname="specs/05-accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/06-visual-regression.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="16" failures="0" skipped="16" time="0" errors="0">
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match home page visual snapshot" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match hero section visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Home Page Visual Tests › should match dark theme visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match empty canvas visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match tool panel visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Studio Visual Tests › should match drawing visual consistency" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern rendering" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Pattern Visual Tests › should match pattern customization visual" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match mobile layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match tablet layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Responsive Design Visual Tests › should match desktop layout" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match button states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Component State Visual Tests › should match form input states" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Cross-Browser Visual Consistency › should render consistently across browsers" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture loading animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Testing › Animation Visual Tests › should capture pattern generation animation" classname="specs/06-visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/07-basic-functionality.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="Basic Genshi Studio Tests › should load the studio page" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have all main mode buttons" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should switch to parametric mode and show controls" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have sidebar panels" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should generate patterns in parametric mode" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should have export functionality" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should be responsive on mobile" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Basic Genshi Studio Tests › should handle errors gracefully" classname="specs/07-basic-functionality.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/08-production-features.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Genshi Studio Production Features › should load and display all 9 pattern types" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test keyboard shortcuts functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test preset loading and transitions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test bookmarking system functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test export and screenshot capabilities" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test auto-evolve mode functionality" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test parameter controls and sliders" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test mobile touch interactions" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test error handling and recovery" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Genshi Studio Production Features › should test page load performance" classname="specs/08-production-features.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/09-production-diagnostic.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Production Deployment Diagnostic › should analyze page structure and content" classname="specs/09-production-diagnostic.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/10-growth-studio.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Interactive Growth Studio › should display Growth button in toolbar" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch to Growth mode when clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show controls overlay" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should show settings panel when settings clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should interact with canvas on click" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should reset growth when reset clicked" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should pause/play animation" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should export image" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should switch between pattern types" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Interactive Growth Studio › should apply color palettes" classname="specs/10-growth-studio.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/11-studio-page-debug.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="2" failures="0" skipped="2" time="0" errors="0">
<testcase name="Studio Page Debug › should load Studio page" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Studio Page Debug › should have navigation to Studio" classname="specs/11-studio-page-debug.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/12-growth-button-check.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Growth Button Check › should show Growth button on Studio page" classname="specs/12-growth-button-check.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/13-console-errors.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Console Error Check › should check for console errors on Studio page" classname="specs/13-console-errors.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-app-loading.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug App Loading › check app loading issues" classname="specs/debug-app-loading.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-console.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Console Errors › check for console errors and app loading" classname="specs/debug-console.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="specs/debug-screenshot.spec.ts" timestamp="2025-07-11T15:28:12.830Z" hostname="accessibility" tests="1" failures="0" skipped="1" time="0" errors="0">
<testcase name="Debug Screenshot › capture page screenshot and analyze" classname="specs/debug-screenshot.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>